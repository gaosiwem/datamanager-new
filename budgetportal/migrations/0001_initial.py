# Generated by Django 2.2.20 on 2024-10-30 08:38

import autoslug.fields
import budgetportal.models
import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.datetime.now)),
                ('date', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('hackathon', 'hackathon'), ('dataquest', 'dataquest'), ('cid', 'cid'), ('gift-dataquest', 'gift-dataquest')], max_length=255)),
                ('province', models.CharField(choices=[('Eastern Cape', 'Eastern Cape'), ('Free State', 'Free State'), ('Gauteng', 'Gauteng'), ('KwaZulu-Natal', 'KwaZulu-Natal'), ('Limpopo', 'Limpopo'), ('Mpumalanga', 'Mpumalanga'), ('Northern Cape', 'Northern Cape'), ('North West', 'North West'), ('Western Cape', 'Western Cape')], max_length=255)),
                ('where', models.CharField(max_length=255)),
                ('url', models.URLField(blank=True, null=True)),
                ('notes_url', models.URLField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('rsvp_url', models.URLField(blank=True, null=True)),
                ('presentation_url', models.URLField(blank=True, null=True)),
                ('status', models.CharField(choices=[('upcoming', 'upcoming'), ('past', 'past')], default='upcoming', max_length=255)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=7, unique=True)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['-slug'],
            },
        ),
        migrations.CreateModel(
            name='GovtFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=200, populate_from='name', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Homepage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_heading', models.CharField(blank=True, max_length=1000)),
                ('sub_heading', models.CharField(blank=True, max_length=1000)),
                ('primary_button_label', models.CharField(blank=True, max_length=1000)),
                ('primary_button_url', models.CharField(blank=True, max_length=1000)),
                ('primary_button_target', models.CharField(blank=True, max_length=1000)),
                ('secondary_button_label', models.CharField(blank=True, max_length=1000)),
                ('secondary_button_url', models.CharField(blank=True, max_length=1000)),
                ('secondary_button_target', models.CharField(blank=True, max_length=1000)),
                ('call_to_action_sub_heading', models.CharField(blank=True, max_length=1000)),
                ('call_to_action_heading', models.CharField(blank=True, max_length=1000)),
                ('call_to_action_link_label', models.CharField(blank=True, max_length=1000)),
                ('call_to_action_link_url', models.CharField(blank=True, max_length=1000)),
                ('call_to_action_link_target', models.CharField(blank=True, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='InfraProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('IRM_project_id', models.IntegerField()),
                ('sphere_slug', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Infrastructure project',
                'unique_together': {('sphere_slug', 'IRM_project_id')},
            },
        ),
        migrations.CreateModel(
            name='InfrastructureProjectPart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('administration_type', models.CharField(max_length=255)),
                ('government_institution', models.CharField(max_length=255)),
                ('sector', models.CharField(max_length=255)),
                ('project_name', models.CharField(max_length=255)),
                ('project_description', models.TextField()),
                ('nature_of_investment', models.CharField(max_length=255)),
                ('infrastructure_type', models.CharField(max_length=255)),
                ('current_project_stage', models.CharField(max_length=255)),
                ('sip_category', models.CharField(max_length=255)),
                ('br_featured', models.CharField(max_length=255)),
                ('featured', models.BooleanField()),
                ('budget_phase', models.CharField(max_length=255)),
                ('project_slug', models.CharField(max_length=255)),
                ('amount_rands', models.BigIntegerField(blank=True, default=None, null=True)),
                ('financial_year', models.CharField(max_length=4)),
                ('project_value_rands', models.BigIntegerField(default=0)),
                ('provinces', models.CharField(default='', max_length=510)),
                ('gps_code', models.CharField(default='', max_length=255)),
                ('partnership_type', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_close', models.CharField(blank=True, max_length=255, null=True)),
                ('duration', models.CharField(blank=True, max_length=255, null=True)),
                ('financing_structure', models.CharField(blank=True, max_length=255, null=True)),
                ('project_value_rand_million', models.CharField(blank=True, max_length=255, null=True)),
                ('form_of_payment', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'National infrastructure project part',
            },
        ),
        migrations.CreateModel(
            name='MainMenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=200)),
                ('url', models.CharField(blank=True, help_text='Use URLs relative to the site root (e.g. /about) for urls on this site.', max_length=1000, null=True)),
                ('align_right', models.BooleanField()),
                ('main_menu_item_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['main_menu_item_order'],
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=1024)),
                ('notice_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['notice_order'],
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(unique=True)),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='ShowcaseItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=400)),
                ('cta_text_1', models.CharField(max_length=200, verbose_name='Call to action text 1')),
                ('cta_link_1', models.URLField(blank=True, null=True, verbose_name='Call to action link 1')),
                ('cta_text_2', models.CharField(blank=True, max_length=200, null=True, verbose_name='Call to action text 2')),
                ('cta_link_2', models.URLField(blank=True, null=True, verbose_name='Call to action link 2')),
                ('second_cta_type', models.CharField(choices=[('primary', 'Primary'), ('secondary', 'Secondary')], max_length=255, verbose_name='Second call to action type')),
                ('file', models.FileField(help_text="<ul><li style='list-style:square'>Thumbnail aspect ratio should be 1.91:1.</li><li style='list-style:square'>Recommended resolution is 1200 x 630 px.</li><li style='list-style:square'>Main focus of image should be centered occupying 630 x 630 px in the middle of the image.</li></ul>", upload_to=budgetportal.models.showcase_item_file_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('item_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['item_order'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_id', models.CharField(max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=510)),
                ('video_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
            ],
            options={
                'ordering': ['video_order'],
            },
        ),
        migrations.CreateModel(
            name='VideoLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('youtube_id', models.CharField(blank=True, max_length=255, null=True)),
                ('video_language_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='budgetportal.Video')),
            ],
            options={
                'ordering': ['video_language_order'],
            },
        ),
        migrations.CreateModel(
            name='SubMenuItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=200)),
                ('url', models.CharField(help_text='Use URLs relative to the site root (e.g. /about) for urls on this site.', max_length=1000)),
                ('sub_menu_item_order', models.PositiveIntegerField(db_index=True, default=0, editable=False)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='budgetportal.MainMenuItem')),
            ],
            options={
                'ordering': ['sub_menu_item_order'],
            },
        ),
        migrations.CreateModel(
            name='Sphere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=200, populate_from='name')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spheres', to='budgetportal.FinancialYear')),
            ],
            options={
                'ordering': ['-financial_year__slug', 'name'],
                'unique_together': {('financial_year', 'name'), ('financial_year', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='IRMSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_taken', models.DateTimeField()),
                ('file', models.FileField(upload_to=budgetportal.models.irm_snapshot_file_path)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='budgetportal.Quarter')),
                ('sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='budgetportal.Sphere')),
            ],
            options={
                'verbose_name': 'IRM Snapshot',
                'ordering': ['sphere__financial_year__slug', 'quarter__number'],
                'unique_together': {('sphere', 'quarter')},
            },
        ),
        migrations.CreateModel(
            name='Government',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=200, populate_from='name')),
                ('sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='governments', to='budgetportal.Sphere')),
            ],
            options={
                'unique_together': {('sphere', 'slug'), ('sphere', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The department name must precisely match the text used in the Appropriation Bill. All datasets must be normalised to match this name. Beware that changing this name might cause a mismatch with already-published datasets which might need to be update to match this.', max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=True, max_length=200, populate_from='name')),
                ('vote_number', models.IntegerField()),
                ('is_vote_primary', models.BooleanField(default=True)),
                ('intro', models.TextField()),
                ('website_url', models.URLField(blank=True, default=None, null=True)),
                ('government', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='budgetportal.Government')),
            ],
            options={
                'ordering': ['vote_number', 'name'],
                'unique_together': {('government', 'slug'), ('government', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, max_length=200, populate_from='name')),
                ('programme_number', models.IntegerField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='programmes', to='budgetportal.Department')),
                ('govt_functions', models.ManyToManyField(to='budgetportal.GovtFunction')),
            ],
            options={
                'ordering': ['programme_number'],
                'unique_together': {('department', 'slug'), ('department', 'name'), ('department', 'programme_number')},
            },
        ),
        migrations.CreateModel(
            name='InfraProjectSnapshot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_number', models.CharField(blank=True, max_length=1024, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('department', models.CharField(blank=True, max_length=1024, null=True)),
                ('sector', models.CharField(blank=True, max_length=1024, null=True)),
                ('province', models.CharField(blank=True, max_length=1024, null=True)),
                ('local_municipality', models.CharField(blank=True, max_length=1024, null=True)),
                ('district_municipality', models.CharField(blank=True, max_length=1024, null=True)),
                ('latitude', models.CharField(blank=True, max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, max_length=1024, null=True)),
                ('budget_programme', models.CharField(blank=True, max_length=1024, null=True)),
                ('primary_funding_source', models.CharField(blank=True, max_length=1024, null=True)),
                ('nature_of_investment', models.CharField(blank=True, max_length=1024, null=True)),
                ('funding_status', models.CharField(blank=True, max_length=1024, null=True)),
                ('program_implementing_agent', models.CharField(blank=True, max_length=1024, null=True)),
                ('principle_agent', models.CharField(blank=True, max_length=1024, null=True)),
                ('main_contractor', models.CharField(blank=True, max_length=1024, null=True)),
                ('other_parties', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('estimated_construction_start_date', models.DateField(blank=True, null=True)),
                ('estimated_completion_date', models.DateField(blank=True, null=True)),
                ('contracted_construction_end_date', models.DateField(blank=True, null=True)),
                ('estimated_construction_end_date', models.DateField(blank=True, null=True)),
                ('total_professional_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_construction_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('variation_orders', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('estimated_total_project_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('expenditure_from_previous_years_professional_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('expenditure_from_previous_years_construction_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('expenditure_from_previous_years_total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('project_expenditure_total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('main_appropriation_professional_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('adjusted_appropriation_professional_fees', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('main_appropriation_construction_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('adjusted_appropriation_construction_costs', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('main_appropriation_total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('adjusted_appropriation_total', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('actual_expenditure_q1', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('actual_expenditure_q2', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('actual_expenditure_q3', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('actual_expenditure_q4', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('irm_snapshot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_snapshots', to='budgetportal.IRMSnapshot')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_snapshots', to='budgetportal.InfraProject')),
            ],
            options={
                'verbose_name': 'Infrastructure project snapshot',
                'ordering': ['irm_snapshot__sphere__financial_year__slug', 'irm_snapshot__quarter__number'],
                'get_latest_by': 'irm_snapshot',
                'unique_together': {('irm_snapshot', 'project')},
            },
        ),
    ]
